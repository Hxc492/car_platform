<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!-- 扫描 -->
    <context:component-scan base-package="com.toddding" />
    <!-- 整合mybatis -->
    <!--1. 导入jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties" system-properties-mode="FALLBACK" />
    <!-- 2. 配置数据源连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
<!--        <property name="driverClassName" value="${jdbc.driver}"></property>-->
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 3.配置SqlSession工厂 -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置别名 -->
        <property name="typeAliasesPackage" value="com.toddding.domain"></property>
        <!-- 配置xml映射配置文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!-- 配置插件 -->
        <property name="plugins">
            <array>
                <!-- 分页插件 -->
                <bean class="com.github.pagehelper.PageInterceptor"></bean>
            </array>
        </property>
    </bean>
    <!-- 4. 配置Mapper的扫描  产生代理类对象 -->
    <!-- 扫描所有指定的mapper 产生 这些mapper的代理类对相关 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 所有mapper接口包 -->
        <property name="basePackage" value="com.toddding.mapper"></property>
        <!-- 注入sqlSessionFactoryBean 对象用于生成接口代理类对象 -->
        <!-- 多数据源  将A数据库的数据  导入到 B数据库 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    </bean>
    <!-- 配置事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!-- 引入shiro的配置 -->
    <import resource="classpath:shiro.xml" />
</beans>